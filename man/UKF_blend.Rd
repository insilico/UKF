% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/UKF.R
\name{UKF_blend}
\alias{UKF_blend}
\title{UKF_blend
Apply UKF_dT to all time points in ts_data, which is
multi-dimensional time-series, where time is the first
column of ts_data. Orignal data file is in rows, but we
transpose before the call of UKF_blend.
Data should have N_y+1 cols, N_y is num ind vars.
Blends UKF_dT with ts_data at each dT.
Updates state y and the N_p ode_model parameters.
Returns chi-square error output, which can be used
as objective function for additional ode_model param
optimization. iterative_param_optim and optim_param fns.
UKF_blend only steps through time series one time.
Iterating UKF_blend with parameters from previous run can
improve parameter estimates. Iteration of UKF is what
iterative_param_optim does.
Note: scalar coefficients for Q and R are hard-coded
This function was known previously as myUKFkura.}
\usage{
UKF_blend(
  t_dummy,
  ts_data,
  ode_model,
  N_p,
  N_y,
  param_guess,
  dt,
  dT,
  R_scale = 0.3,
  Q_scale = 0.015
)
}
\arguments{
\item{t_dummy}{a dummy time variable, because ode models don't have explcit time}

\item{ts_data}{panel of time series data. First column holds time values, other N_y columns hold variable values}

\item{ode_model}{model function with ind variables y and N_p parameters}

\item{N_p}{number of unknown model params}

\item{N_y}{number of ind variables}

\item{param_guess}{vector of length N_p with initial guess for ode_model parameters}

\item{dt}{smaller time step size within dT for solving ode}

\item{dT}{time step size that comes from time series data step}

\item{R_scale}{related to standard deviation of Gaussian measurement noise of ind variables. A number that must be specified by user.}

\item{Q_scale}{related to standard deviation of process noise. Noise related to model parameters. User choice. Can it be 0?}
}
\value{
list: param_est (N_p model parameter estiamtes after run through time series), xhat (augmented Kalman update), error (error from Pxx augmented covariance at sigma points), and chisq (chi-square goodness of fit of prediction to data)
}
\description{
UKF_blend
Apply UKF_dT to all time points in ts_data, which is
multi-dimensional time-series, where time is the first
column of ts_data. Orignal data file is in rows, but we
transpose before the call of UKF_blend.
Data should have N_y+1 cols, N_y is num ind vars.
Blends UKF_dT with ts_data at each dT.
Updates state y and the N_p ode_model parameters.
Returns chi-square error output, which can be used
as objective function for additional ode_model param
optimization. iterative_param_optim and optim_param fns.
UKF_blend only steps through time series one time.
Iterating UKF_blend with parameters from previous run can
improve parameter estimates. Iteration of UKF is what
iterative_param_optim does.
Note: scalar coefficients for Q and R are hard-coded
This function was known previously as myUKFkura.
}
\examples{
Example
}
